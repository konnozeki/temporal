version: "3.8"

services:
  elasticsearch:
    container_name: temporal-elasticsearch
    image: elasticsearch:7.17.27
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    networks:
      - temporal-network
    expose:
      - 9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  postgresql:
    container_name: temporal-postgresql
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    networks:
      - temporal-network
    expose:
      - 5432
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  temporal:
    container_name: temporal
    image: temporalio/auto-setup:1.27.2
    depends_on:
      - postgresql
      - elasticsearch
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
    networks:
      - temporal-network
    ports:
      - 7233:7233

  temporal-admin-tools:
    container_name: temporal-admin-tools
    image: temporalio/admin-tools:1.27.2-tctl-1.18.2-cli-1.3.0
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    networks:
      - temporal-network
    stdin_open: true
    tty: true

  temporal-ui:
    container_name: temporal-ui
    image: temporalio/ui:2.34.0
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    networks:
      - temporal-network
    ports:
      - 8080:8080

  fastapi-app:
    container_name: fastapi-app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - GIT_ACCESS_TOKEN=${GIT_ACCESS_TOKEN}
      - GIT_REPO_URL=${GIT_REPO_URL}
    ports:
      - 8000:8000
    networks:
      - temporal-network
    volumes:
      - .:/app

  worker:
    container_name: temporal-worker
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    networks:
      - temporal-network
    volumes:
      - .:/app
    command: ["sh", "-c", "PYTHONPATH=/app python -m api.migrate && PYTHONPATH=/app python -m temporal.workers.worker"]


networks:
  temporal-network:
    driver: bridge

volumes:
  elasticsearch-data:
  postgresql-data:
